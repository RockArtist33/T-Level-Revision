<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>U2 - Introduction to Programmings on</title><link>https://rockartist33.github.io/testing/u2-introduction-to-programming/</link><description>Recent content in U2 - Introduction to Programmings on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rockartist33.github.io/testing/u2-introduction-to-programming/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.1-Program-Data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.1-Program-Data/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.1.1 Understand the use of, and need for, data types String a sequence of characters Character Unit of information that roughly corresponds to a grapheme, grapheme-like unit, or symbol, such as in an alphabet or syllabary in the written form of a natural language.</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.2-Operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.2-Operators/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.2.1 - Understand the purpose of, and how to use, mathematical operators in program code and algorithms (add, subtract, divide, multiply, integer division, modulus) Mathematical operators are used in program code and algorithms to perform mathematical operations such as addition, subtraction, multiplication, and division.</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.3-File-handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.3-File-handling/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.3.1 - Understand how to use text files for input and output of data</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.4-Program-Structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.4-Program-Structure/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.4.1 - Understand how sequence, selection (branching) and iteration are used within programs and algorithms A sequence is a set of instructions in a program or algorithm that are executed in a specific order.</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.5-Built-in-functions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.5-Built-in-functions/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.5.1 - Understand the benefits and drawbacks of using pre-written code. PROS</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.6-Validation-and-error-handling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.6-Validation-and-error-handling/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.6.1 - Understand the need for different types of input validation and be able to write, interpret and debug code that makes use of these validation techniques Presence check A presence check makes sure that a critical field cannot be left blank, it must be filled in.</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.7-Maintainable-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.7-Maintainable-code/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.7.1 - Understand the accepted style conventions (such as Python’s PEP 8) and how these are implemented to create readable and maintainable code.</description></item><item><title/><link>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.8-Testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rockartist33.github.io/testing/U2-Introduction-to-Programming/2.8-Testing/</guid><description>Go back home: [[⭐ Main ⭐]]
Finished / Incomplete
2.8.1 - Understand the fundamental importance of testing for all components Software Software ensures that a piece of software performs as expected and meets the requirements and specifications set forth by the developers.</description></item></channel></rss>